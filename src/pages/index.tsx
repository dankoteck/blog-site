import { useSession } from "next-auth/react";
import Head from "next/head";
import NextLink from "next/link";
import {
  Button,
  Flex,
  Input,
  InputGroup,
  InputLeftElement,
  Link,
  Stack,
  Text,
  useDisclosure,
} from "@chakra-ui/react";
import { MagnifyingGlassIcon, UserIcon } from "@heroicons/react/20/solid";

import AccountMenu from "@/container/AccountMenu";
import AuthModal from "@/container/AuthModal";

export default function Home() {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const { data: session } = useSession();
  const user = session?.user;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta
          name="description"
          content="Lekhoa Blog site generated by t3.app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="min-h-screen">
        <header>
          <Flex
            p={4}
            borderBottom="1px"
            borderColor="gray.200"
            justifyContent="space-between"
            alignItems="center"
          >
            <Link _hover={{ textDecoration: "none" }} href="/" as={NextLink}>
              <Text fontSize={["xl", "2xl", "3xl"]}>BLOG SITE</Text>
            </Link>
            <InputGroup width="fit-content">
              <InputLeftElement pointerEvents="none">
                <MagnifyingGlassIcon width={20} />
              </InputLeftElement>
              <Input
                width={[200, 200, 400, 500]}
                placeholder="Search anything..."
              />
            </InputGroup>
            {user ? (
              <AccountMenu user={user} />
            ) : (
              <Stack direction="row" alignItems="center">
                <Button
                  onClick={onOpen}
                  size={"sm"}
                  leftIcon={<UserIcon className="h-6 w-6" />}
                  colorScheme="purple"
                  variant="solid"
                >
                  Login
                </Button>
              </Stack>
            )}
          </Flex>

          <AuthModal isOpen={isOpen} onClose={onClose} />
        </header>
      </main>
    </>
  );
}
